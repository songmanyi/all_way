一、强引用：
Object strongRef = new Object();
Object object = strongRef;
strongRef = null;

object不会变为null；

强引用的回收：
1、作用域执行完
2、强引用设置为null

二、软引用：
Object softRef = new Object();
SoftReference softReference = new SoftReference(softRef);

软引用的回收：
1、内存不足的情况下，会被回收
2、设置软引用为null

两者的区别：
软引用和强引用在内存充足的情况下，都不会被回收。只有在内存不足的情况下，软引用才会被回收避免OOM。


三、弱引用：
Object weakRef = new Object();
WeakReference weakReference  = new WeakReference(weakRef);

1、GC执行，就会被回收
2、设置弱引用为null

四、虚引用：
Object obj = new Object();
PhantomReference<Object> pf = new PhantomReference<Object>(obj);
obj=null;
pf.get();//永远返回null
pf.isEnQueued();//返回是否从内存中已经删除

虚引用是每次垃圾回收的时候都会被回收，通过虚引用的get方法永远获取到的数据为null，因此也被成为幽灵引用。
虚引用主要用于检测对象是否已经从内存中删除。