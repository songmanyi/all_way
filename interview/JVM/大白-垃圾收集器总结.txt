年轻代的垃圾回收器：
1、Serial：
    单线程垃圾回收器。垃圾回收的时候，会把用户线程暂停。
    主要用于客户端或内存特别小的情景下，效率特别高
2、ParNew：
    是多线程的垃圾回收器。
3、Parallel Scavenge：
    又称并行垃圾回收器，是1.7jdk默认的新生代的垃圾回收器。
    吞吐量（执行用户代码时间/执行用户代码时间+垃圾回收时间）非常高。
    也是在暂停用户线程的情况下，进行垃圾回收，只是垃圾回收是并行的，效率非常高。

老年代垃圾回收器：
1、CMS：
    并发的标记清除器。总共分为四个阶段：
    a、初始标记：通过GCRoot，标记存活的对象。
    b、并发标记：可以和用户线程同时执行标记。
    c、重新标记：在并行标记的过程中，可能会产生新的垃圾，需要重新标记
    d、并发清理：可以和用户线程同时执行清除。

    优点：并发收集；低停顿。
    缺点：占用CPU资源（并发收集或并发清除过程中，多线程操作cpu会上下文切换，占用CPU资源）
              无法处理浮动垃圾
              会产生空间碎片（标记清除算法的弊端）

年轻代和老年代：
1、G1收集器：
    优点：并行和并发
              分代收集
              空间整合
    步骤：
    a、初始标记
    b、分代收集
    c、最终标记
    d、筛选回收：通过PRT进行记账操作             

2、ZGC收集器：暂时不太清楚，jdk11用的回收器
    