定义：
synchronized是jvm定义的关键字
lock是接口，有对应的实现类

类型：
synchronized是重入锁。
而实现lock的类，既可以定义重入锁也可以定义非重入锁，并且还有读写锁。

使用：
synchronized加锁，是通过标记方法或定义锁代码块。解锁的话则是方法执行完或抛出异常或执行等待的方法，来释放锁。
lock有显示的方法，来加锁和解锁，并且还有tryLock尝试获得锁等方法，更加灵活。

通知等待机制的使用：
synchronized是通过wait和notify进行等待和唤醒的。并且只有有这样一组。
lock是通过new condition，通过condition的await和signal来实现的，可以创建多组。

效率：
synchronized，当争抢锁的过程越来越激烈的时候，会从偏向锁、轻量级锁到重量级锁升级，并且不会降级。再争抢锁没那么激烈的时候，synchronized效率更高。
lock是不存在锁级别的升级，是通过CAS来实现的。所以再竞争没那么激烈的情况下，效率低于synchronized。


超时获取锁：
    lock可以通过tryLock方法判断是否超时获得锁。超时则返回。
