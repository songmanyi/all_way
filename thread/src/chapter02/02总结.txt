1、线程安全问题存在于“实例变量”中，如果方法内部的私有变量，则不存在线程安全问题。
同一个实例，不同线程同时访问操作，则实例变量会存在线程安全的问题。
同类下的不同实例，不同线程同时访问操作，对于static变量，会存在线程安全的问题。

2、脏读：
对设置值的方法，加锁。对读不进行加锁。

3、锁重入：
自己可以再次获得自己的内部锁。并且支持父子类继承的环境中。

4、出现异常时，锁会自动释放。

5、锁不存在继承性。

6、同步代码块的使用
通过同步代码块，锁住核心的操作方法，不影响其他部分的执行。

7、可以将任意对象，都作为锁使用。也分为对象锁和类锁

8、注意String常量带来的锁的问题。因为String的常量为同一对象，所以会存在同步锁

9、死锁问题：
死锁现象发生：互相获得锁，等待释放。

10、volatile关键字与死循环